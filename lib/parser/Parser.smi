_require "basis.smi"

structure Parser = struct
  type 'a t = int -> ('a * int) option
  val orElse : 'a t -> 'a t -> 'a t
  val andThen : 'a t -> 'b t -> ('a * 'b) t
  val map : ('a -> 'b) -> 'a t -> 'b t
  val mapPartial : ('a -> 'b t) -> 'a t -> 'b t
  val opt : 'a t -> ('a option) t
  val many : 'a t -> ('a list) t
  val many1 : 'a t -> ('a list) t
  val bang : 'a t -> unit t
  val amp: 'a t -> unit t
  val pstring : string -> string -> string t
  val any : string -> string t
  val parse : 'a t -> string -> ('a * string) option
  val return : 'a -> 'a t
end

